on: 
  workflow_dispatch:
  push:
    branches:
      main

jobs:
  ci_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    environment: staging
    name: Run CI
    steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: '3.13'
        - name: Install dependencies
          run: pip install poetry && poetry install
          working-directory: src/py
        - name: Run formatter
          run: poetry run black . --check
          working-directory: src/py
        - name: Run linting
          run: poetry run pylint .
          working-directory: src/py
        - name: Run unit tests
          run: poetry run pytest .
          working-directory: src/py
  cd_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: ci_job
    environment: staging
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      IMAGE_URL: ${{ vars.AWS_ECR_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/tetris_container_registry:${{ vars.TF_VAR_ENVIRONMENT }}
    name: Run CD
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Init terraform
        run: terraform init
        working-directory: src/terraform
      - name: Apply terraform
        run: terraform apply -auto-approve
        working-directory: src/terraform
      - name: Build Dockerfile for server
        run: docker build -t tetris-server && docker tag tetris-server ${{ env.IMAGE_URL }} && docker push ${{ env.IMAGE_URL }}
        working-directory: src/py
