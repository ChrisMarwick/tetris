on: 
  workflow_dispatch:
  push:
    branches:
      main

jobs:
  ci_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    environment: staging
    name: Run CI
    steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: '3.13'
        - name: Install dependencies
          run: pip install poetry && poetry install
          working-directory: src/py
        - name: Run formatter
          run: poetry run black . --check
          working-directory: src/py
        - name: Run linting
          run: poetry run pylint .
          working-directory: src/py
        - name: Run unit tests
          run: poetry run pytest .
          working-directory: src/py
  cd_staging_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: ci_job
    environment: staging
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    name: Run CD
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Deploy terraform
        id: tf_deploy
        run: >
          terraform init &&
          terraform apply -auto-approve &&
          echo "ECR_URL=$(terraform output -raw ecr_url)" >> "$GITHUB_OUTPUT"
        working-directory: src/terraform/envs/staging
      - name: Build Dockerfile for server
        run: >
          docker build -t tetris-server . &&
          docker tag tetris-server ${{ steps.tf_deploy.outputs.ECR_URL }}:staging &&
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.tf_deploy.outputs.ECR_URL }} &&
          docker push ${{ steps.tf_deploy.outputs.ECR_URL }}:staging
        working-directory: src/py
        timeout-minutes: 5
